diff --git a/usr/src/memsim.c b/usr/src/memsim.c
index f5413bd..2552f23 100644
--- a/usr/src/memsim.c
+++ b/usr/src/memsim.c
@@ -88,6 +88,11 @@ int virt_to_pte(uint16_t vaddr, uint16_t *pte)
 {
     /*A COMPLETER*/
 
+    *pte = page_table[(vaddr >> 8) & 0X00FF];
+
+    return 0;
+
+
 #if MEMORY_SIZE_SMALL // A completer étape 4
     
 #else
@@ -108,6 +113,10 @@ int virt_to_pte(uint16_t vaddr, uint16_t *pte)
 int get_byte(uint32_t vaddr, uint8_t *byte) {
 
     /*A COMPLETER*/
+    uint16_t pte;
+    virt_to_pte(vaddr, &pte);
+    *byte = main_mem[pte >> 8][((uint16_t)vaddr) & 0X00FF];
+    return 0;
 
 #if MEMORY_PTE_ATTRIBUTES_ACTIVE //A completer étape 3
     
@@ -133,6 +142,13 @@ int get_byte(uint32_t vaddr, uint8_t *byte) {
  */
 int store_byte(uint32_t vaddr, uint8_t byte) {
     /*A COMPLETER*/
+    
+    uint16_t pte;
+    virt_to_pte(vaddr, &pte);
+
+    main_mem[pte >> 8][((uint16_t)vaddr) & 0X00FF] = byte;
+
+    return 0;
 
 #if MEMORY_PTE_ATTRIBUTES_ACTIVE //A completer étape 3
     
@@ -264,17 +280,22 @@ int test_mem_2()
  *          is equal to virtual 0xFFFF
  */
 void init_page_table(void) {
- /* A COMPLETER */
-
-#if MEMORY_SIZE_SMALL /* A COMPLETER Etape 4 */
+    int i;
+    uint8_t r_shift = 0;
+#if MEMORY_SIZE_SMALL
+    r_shift = 8;
 #else
+    r_shift = 10;
 #endif
-
-
-#if MEMORY_PTE_ATTRIBUTES_ACTIVE /* A COMPLETER Etape 3 */
-
+    for (i = 0; i < MEMORY_PAGE_NUM; ++i) {
+        page_table[i] = ((MEMORY_PAGE_NUM -1) - i) << r_shift;
+#if MEMORY_PTE_ATTRIBUTES_ACTIVE
+        /* TODO step 3 */
+        /* Make PTE 10 to 12 read-only */
+        /* Valid bit*/
+        /* Make PTE 5 to 8 not valid */
 #endif
-
+    }
 }
 
 int main(int argc, char *argv[]) {    
