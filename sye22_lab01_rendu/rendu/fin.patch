diff --git a/so3/devices/timer/sp804.c b/so3/devices/timer/sp804.c
index 3c4a17c..5efa853 100644
--- a/so3/devices/timer/sp804.c
+++ b/so3/devices/timer/sp804.c
@@ -45,14 +45,20 @@ typedef struct {
 } sp804_t;
 
 static sp804_t *sp804 = NULL;
+static size_t irq_counter = 0;
 
 static irq_return_t timer_isr(int irq, void *dummy) {
 
 	/* Clear the interrupt */
 	iowrite32(&sp804->base->timerintclr, 1);
-
 	jiffies++;
 
+	if(!(irq_counter % 1000)) {
+		printk("Nombre d'interruptions : %d\n", irq_counter);
+	}
+
+	irq_counter++;
+	
 	raise_softirq(TIMER_SOFTIRQ);
 
 	return IRQ_COMPLETED;
diff --git a/so3/include/version.h b/so3/include/version.h
index 6022283..5b97efa 100644
--- a/so3/include/version.h
+++ b/so3/include/version.h
@@ -19,7 +19,7 @@
 
 #ifndef VERSION_H
 
-#define SO3_KERNEL_VERSION "2022.4.1"
+#define SO3_KERNEL_VERSION "2022.4.2"
 
 
 #endif /* VERSION_H */
diff --git a/so3/kernel/main.c b/so3/kernel/main.c
index 38377a3..7167e02 100644
--- a/so3/kernel/main.c
+++ b/so3/kernel/main.c
@@ -128,8 +128,6 @@ void kernel_start(void) {
 
 	calibrate_delay();
 
-	hidden_init();
-
 	/*
 	 * Perform the rest of bootstrap sequence in a separate thread, so that
 	 * we can rely on the scheduler for subsequent threads.
diff --git a/usr/src/CMakeLists.txt b/usr/src/CMakeLists.txt
index e201639..eb364f6 100644
--- a/usr/src/CMakeLists.txt
+++ b/usr/src/CMakeLists.txt
@@ -4,6 +4,7 @@ add_executable(ls.elf ls.c)
 add_executable(more.elf more.c)
 add_executable(cat.elf cat.c)
 add_executable(comp.elf comp.c)
+add_executable(hello.elf hello.c)
 add_executable(echo.elf echo.c)
 add_executable(ping.elf ping.c)
 add_executable(threads.elf threads.c)
@@ -13,6 +14,7 @@ target_link_libraries(sh.elf c)
 target_link_libraries(ls.elf c)
 target_link_libraries(more.elf c)
 target_link_libraries(cat.elf c)
+target_link_libraries(hello.elf c)
 target_link_libraries(comp.elf c)
 target_link_libraries(echo.elf c)
 target_link_libraries(ping.elf c)
diff --git a/usr/src/hello.c b/usr/src/hello.c
index 1ad962a..ff77126 100644
--- a/usr/src/hello.c
+++ b/usr/src/hello.c
@@ -6,7 +6,21 @@
 
 int main(int argc, char *argv[]) {
 
+    char* hello = "Hello World !\n";
+
 	printf("SO3 - Simple application\n");
+    printf("%s", hello);
+    printf("Adresse : %p\n", hello);
+
+    size_t taille = strlen(hello);
+
+    
+    for(size_t i = 0; i < taille - 1; i++) {
+
+        ++*((char*)(0x8000 + i * sizeof(char)));
+    }
+    
+    printf("%s", hello);
     
     return 0;
 }
diff --git a/usr/src/sh.c b/usr/src/sh.c
index a7066b2..f120d2e 100644
--- a/usr/src/sh.c
+++ b/usr/src/sh.c
@@ -235,7 +235,6 @@ void main(int argc, char *argv[])
 	char user_input[80];
 	int i;
 	struct sigaction sa;
-	unsigned *ptr = NULL;
 
 	memset(&sa, 0, sizeof(struct sigaction));
 
@@ -252,11 +251,14 @@ void main(int argc, char *argv[])
 
 		gets(user_input);
 
-		*ptr = 0xaabbcc;
-
 		if (strcmp(user_input, ""))
 			parse_token(user_input);
 
+		for (i = 0; i < TOKEN_NR; i++) {
+			if(tokens[i][0] != 0)
+				printf("%s\n", tokens[i]);
+		}
+
 		/* Check if there is at least one token to be processed */
 		if (tokens[0][0] != 0)
 			process_cmd();
@@ -264,3 +266,4 @@ void main(int argc, char *argv[])
 
 	}
 }
+
